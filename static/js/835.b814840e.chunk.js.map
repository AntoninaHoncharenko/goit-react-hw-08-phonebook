{"version":3,"file":"static/js/835.b814840e.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/Notification/Notification.styled.js","redux/contacts/selectors.js","components/Notification/Notification.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  width: 320px;\n  height: 70px;\n  padding: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  justify-content: space-between;\n  border-radius: 8px;\n  border: 1px solid black;\n  background-color: white;\n\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const ContactName = styled.p`\n  font-size: 20px;\n  margin-bottom: 5px;\n  color: #006600;\n`;\n\nexport const ContactNumber = styled.p`\n  font-size: 18px;\n`;\n\nexport const DeleteBtn = styled.button`\n  width: 80px;\n  height: 35px;\n  margin: auto 0;\n  border: none;\n  border-radius: 6px;\n  font-size: 18px;\n  background-color: #ff4d4d;\n  transition: background-color 300ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: #ff0000;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operation';\nimport { ContactItem } from './ContactItem.styled';\nimport { Box } from 'components/Box';\nimport { ContactName, ContactNumber, DeleteBtn } from './ContactItem.styled';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  return (\n    <ContactItem>\n      <Box>\n        <ContactName>{contact.name}</ContactName>\n        <ContactNumber>{contact.number}</ContactNumber>\n      </Box>\n      <DeleteBtn type=\"button\" onClick={handleDelete}>\n        Delete\n      </DeleteBtn>\n    </ContactItem>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  font-size: 20px;\n  text-align: center;\n  color: #b30000;\n`;\n","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.value;\n","import { Message } from './Notification.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Notification = () => {\n  const filter = useSelector(selectFilter);\n  return <Message>{filter} not found</Message>;\n};\n","import { Contact } from '../ContactItem/ContactItem';\nimport { Notification } from '../Notification/Notification';\nimport { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectFilter,\n  selectLoading,\n} from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectLoading);\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <div>\n      <ul>\n        {filteredContacts.map(contact => {\n          return <Contact contact={contact} key={contact.id} />;\n        })}\n      </ul>\n      {filteredContacts.length < 1 && !isLoading && <Notification />}\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FindLabel = styled.label`\n  margin-bottom: 8px;\n  font-size: 20px;\n  text-align: center;\n`;\n\nexport const FindInput = styled.input`\n  width: 250px;\n  height: 30px;\n  padding: 3px 6px;\n  margin: 0 auto;\n  border-radius: 4px;\n  border: 1px solid black;\n  font-size: 18px;\n  transition: border 300ms linear;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #006600;\n  }\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Box } from '../Box';\nimport { FindLabel, FindInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const value = event.target.value;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" mb=\"20px\">\n      <FindLabel htmlFor=\"text\">Find contacts by name</FindLabel>\n      <FindInput type=\"text\" id=\"text\" onChange={handleChange} />\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  border: 2px solid black;\n  border-radius: 12px;\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin: 0 auto 20px;\n  background-color: #f4f4f4;\n`;\n\nexport const ContactLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  font-size: 18px;\n`;\n\nexport const ContactInput = styled.input`\n  width: 250px;\n  height: 30px;\n  margin-top: 8px;\n  padding: 3px 6px;\n  border-radius: 4px;\n  border: 1px solid black;\n  font-size: 18px;\n  transition: border 300ms linear;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #008000;\n  }\n`;\n\nexport const AddBtn = styled.button`\n  width: 250px;\n  height: 35px;\n  padding: 3px 6px;\n  border-radius: 4px;\n  margin: 8px auto 0px;\n  border: none;\n  font-size: 18px;\n  background-color: #3cd03c;\n  transition: background-color 300ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: #198d19;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operation';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport toast from 'react-hot-toast';\nimport { Form, ContactLabel, ContactInput, AddBtn } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const addedName = form.elements.name.value;\n    const addedNumber = form.elements.number.value;\n\n    if (contacts.find(contact => contact.name === addedName)) {\n      toast.error(`${addedName} is already in contacts`, {\n        duration: 3000,\n        position: 'top-center',\n      });\n    } else {\n      dispatch(addContact({ name: addedName, number: addedNumber }));\n    }\n\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <ContactLabel>\n        Name\n        <ContactInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </ContactLabel>\n      <ContactLabel>\n        Number\n        <ContactInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </ContactLabel>\n      <AddBtn type=\"submit\">Add contact</AddBtn>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Subtitle = styled.h2`\n  font-size: 28px;\n  font-weight: 600;\n  margin-bottom: 18px;\n  text-align: center;\n`;\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Box } from 'components/Box';\nimport { Subtitle } from './Contacts.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectLoading, selectError } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operation';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      width=\"900px\"\n      display=\"flex\"\n      justifyContent=\"space-around\"\n      margin=\"0 auto\"\n      pt=\"50px\"\n    >\n      <Box>\n        <Subtitle>Contacts</Subtitle>\n        <Filter />\n        {isLoading && !error && <b>Loading...</b>}\n        <ContactList />\n      </Box>\n      <Box>\n        <Subtitle>Add contact</Subtitle>\n        <ContactForm />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactItem","styled","ContactName","ContactNumber","DeleteBtn","Contact","contact","dispatch","useDispatch","Box","name","number","type","onClick","deleteContact","id","Message","selectContacts","state","contacts","selectLoading","isLoading","selectError","error","selectFilter","filter","value","Notification","useSelector","ContactList","normalizedFilter","toLowerCase","filteredContacts","includes","map","length","FindLabel","FindInput","Filter","display","flexDirection","mb","htmlFor","onChange","event","target","setFilter","Form","ContactLabel","ContactInput","AddBtn","ContactForm","onSubmit","preventDefault","form","addedName","elements","addedNumber","find","toast","duration","position","addContact","reset","pattern","title","required","Subtitle","useEffect","fetchContacts","width","justifyContent","margin","pt"],"sourceRoot":""}